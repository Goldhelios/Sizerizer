**सारांश**

**परिचय**

* जावास्क्रिप्ट में संस्करण 8 के बाद से कई बदलाव हुए हैं, जिसमें कक्षाएं, मॉड्यूल और तीर फ़ंक्शन शामिल हैं।
* कोड की संगतता सुनिश्चित करने के लिए, जावास्क्रिप्ट को "`use strict`" के साथ चिह्नित किया जाना चाहिए।
* इस अभ्यास में, हम मूल डेटा प्रकारों पर चर्चा करेंगे।

**डेटा प्रकार**

* **संख्याएँ:** एक विशिष्ट सीमा के भीतर फ्लोटिंग-पॉइंट या पूर्णांक मान।
* **स्ट्रिंग्स:** एकल या दोहरे उद्धरणों में संलग्न वर्णों का एक क्रम।
* **बूलियन:** `true` या `false` मान जो तार्किक स्थितियों का प्रतिनिधित्व करते हैं।
* **नुल:** एक विशिष्ट मूल्य का प्रतिनिधित्व करता है जो मौजूद नहीं है।
* **अपरिभाषित:** एक चर का प्रतिनिधित्व करता है जिसे अभी तक एक मूल्य सौंपा नहीं गया है।
* **प्रतीक:** विशिष्ट मूल्यों का प्रतिनिधित्व करते हैं और अक्सर घटकों को पहचानने के लिए उपयोग किए जाते हैं।

**विशेषताएँ**

* **`typeof` ऑपरेटर:** किसी मान के डेटा प्रकार को निर्धारित करता है।
* **नुल और अपरिभाषित:** `typeof` ऑपरेटर के साथ समान मान देते हैं, लेकिन नुल एक ऑब्जेक्ट है जबकि अपरिभाषित नहीं है।

**रिक्तता और मूल्य बनाम प्रकार**

* एक खाली स्ट्रिंग एक अशक्त मान से भिन्न होती है क्योंकि इसका एक प्रकार होता है।
* एक अशक्त मान किसी मौजूद न होने वाले मान का प्रतिनिधित्व करता है, जबकि एक खाली मान एक मौजूद मान का प्रतिनिधित्व करता है जिसका मान खाली है।

**अभ्यास**

* प्रदान किए गए उदाहरणों की समीक्षा करें और डेटा प्रकारों की समझ को बढ़ावा देने के लिए उन्हें चलाएं।
* विशिष्टता दस्तावेज़ का अन्वेषण करें और डेटा प्रकारों के बारे में अधिक जानें।
* एक रिपॉजिटरी से अभ्यास फ़ाइलें डाउनलोड करें और उन्हें अपने अभ्यास के लिए उपयोग करें।**आवश्यक बिंदु**

**जावास्क्रिप्ट में डेटा प्रकार**

* **संख्यात्मक:**
    * नंबर: सीमित रेंज के पूर्णांक और दशमलव
    * बिगइंट: बड़े पूर्णांक
* **स्ट्रिंग:**
    * एकल या डबल उद्धरणों से घिरा पाठ
* **बूलियन:**
    * ट्रू या फॉल्स मान
* **नल:**
    * एक अद्वितीय मान जो शून्य या अनुपस्थित मूल्य का प्रतिनिधित्व करता है
* **अपरिभाषित:**
    * एक चर जो अभी तक प्रारंभ नहीं किया गया है
* **प्रतीक:**
    * अद्वितीय पहचानकर्ता अक्सर घटकों में उपयोग किए जाते हैं
* **ऑब्जेक्ट:**
    * डेटा का संग्रह जो गुणों और विधियों के रूप में व्यवस्थित होता है

**विशेष मान**

* **नल एक ऑब्जेक्ट है:** इसे एक अद्वितीय मान के रूप में माना जाता है लेकिन प्रकार के रूप में एक ऑब्जेक्ट है।
* **अपरिभाषित एक प्रकार है:** यह एक चर का प्रकार है जिसे अभी तक प्रारंभ नहीं किया गया है।

**सिंटैक्स**

* `टाइपऑफ़ (मूल्य)`: किसी मान के प्रकार को निर्धारित करता है।

**अभ्यास**

* विशिष्टताओं को देखकर विभिन्न डेटा प्रकारों के बारे में अधिक जानें।**Introduction**

* JavaScript has undergone significant changes since its inception, and modern JavaScript syntax includes new features like classes, modules, and arrow functions.
* To ensure compatibility with older code, the "use strict" command is recommended to force the code to adhere to modern standards.

**Data Types**

JavaScript supports various primitive data types:

* **Numbers**: Have a range limit and can be very large (BigInts can represent even larger numbers).
* **Strings**: Can be represented using single or double quotes.
* **Booleans**: Represent true or false values.
* **Null**: Represents a standalone value and is used to indicate the absence of a value.
* **Undefined**: Indicates that a variable has been declared but not assigned a value.
* **Symbols**: Unique identifiers often used for object properties and React components.

**Type Checking**

* The `typeof` operator can be used to determine the type of a value.
* However, `null` returns "object" because it is an object in JavaScript despite representing a lack of value.
* `undefined` is a distinct type and returns "undefined" when checked with `typeof`.

**Additional Notes**

* Avoid excessive line breaks and spacing, as they can reduce code readability.
* Use code extensions such as "Prettier" to automatically format code.
* Consult the official JavaScript documentation at MDN and TC39 for detailed specifications.

**Assignments**

* Review the provided code and specifications to familiarize yourself with the different data types and their properties.